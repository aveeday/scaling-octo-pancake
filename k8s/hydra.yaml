apiVersion: v1
kind: Service
metadata:
  name: hydra-service
spec:
  selector:
    app: hydra
  ports:
  - name: hydra-public
    port: 80
    targetPort: hydra-public
  - name: hydra-admin
    port: 81
    targetPort: hydra-admin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hydra
  namespace: default
  labels:
    app: hydra
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hydra
  minReadySeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: hydra
### Container settings
    spec:
      # nodeSelector:
      #   gts: "add"
      # tolerations:
      # - key: "gtsgroup"
      #   operator: "Equal"
      #   value: "gtsGroup"
      #   effect: "NoSchedule"
      securityContext:
        runAsUser: 0
        # fsGroup: 0
          # fsGroup: 10000
          # runAsUser: 10000
          # runAsGroup: 10000
      containers:
      - image: oryd/hydra:v2.0.2
        name: hydra
        command:
          - hydra
          - serve 
          - -c 
          - /etc/config/hydra/hydra.yml 
          - all 
          - --dev
        resources:
          requests:
            memory: "64Mi"
            cpu: "64m"
          limits:
            memory: "500Mi"
            cpu: "500m"
        imagePullPolicy: Always
        ports:
        - containerPort: 4444 # public
          name: hydra-public
        - containerPort: 4445 # admin
          name: hydra-admin
        # readinessProbe:
        #   httpGet:
        #     path: /v1_0/health
        #     port: 8888
        #   initialDelaySeconds: 5
        #   periodSeconds: 5
        #   successThreshold: 1
### Set environment
        env:
        - name: DSN
          value: sqlite:///home/ory/sqlite/db.sqlite?_fk=true
        - name: LOG_LEVEL
          value: trace

### PVC Settings
        volumeMounts:
          - name: hydra-sqlite
            mountPath: /home/ory/sqlite/
          - name: hydra-config
            mountPath: /etc/config/hydra/
            readOnly: true
      volumes:
        - name: hydra-sqlite
          persistentVolumeClaim:
            claimName: hydra-migrate-claim1
        - name: hydra-config
          configMap:
            # Provide the name of the ConfigMap you want to mount.
            name: hydra-configmap
            # An array of keys from the ConfigMap to create as files
            items:
            - key: hydra.yml
              path: hydra.yml